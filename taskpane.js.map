{"version":3,"file":"taskpane.js","mappings":"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","sources":["webpack://office-addin-taskpane-js/webpack/bootstrap","webpack://office-addin-taskpane-js/webpack/runtime/global","webpack://office-addin-taskpane-js/webpack/runtime/hasOwnProperty shorthand","webpack://office-addin-taskpane-js/webpack/runtime/publicPath","webpack://office-addin-taskpane-js/webpack/runtime/jsonp chunk loading","webpack://office-addin-taskpane-js/./src/taskpane/taskpane.js","webpack://office-addin-taskpane-js/./src/taskpane/taskpane.html"],"sourcesContent":["// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = function(obj, prop) { return Object.prototype.hasOwnProperty.call(obj, prop); }","var scriptUrl;\nif (__webpack_require__.g.importScripts) scriptUrl = __webpack_require__.g.location + \"\";\nvar document = __webpack_require__.g.document;\nif (!scriptUrl && document) {\n\tif (document.currentScript && document.currentScript.tagName.toUpperCase() === 'SCRIPT')\n\t\tscriptUrl = document.currentScript.src;\n\tif (!scriptUrl) {\n\t\tvar scripts = document.getElementsByTagName(\"script\");\n\t\tif(scripts.length) {\n\t\t\tvar i = scripts.length - 1;\n\t\t\twhile (i > -1 && (!scriptUrl || !/^http(s?):/.test(scriptUrl))) scriptUrl = scripts[i--].src;\n\t\t}\n\t}\n}\n// When supporting browsers where an automatic publicPath is not supported you must specify an output.publicPath manually via configuration\n// or pass an empty string (\"\") and set the __webpack_public_path__ variable from your code to use your own logic.\nif (!scriptUrl) throw new Error(\"Automatic publicPath is not supported in this browser\");\nscriptUrl = scriptUrl.replace(/^blob:/, \"\").replace(/#.*$/, \"\").replace(/\\?.*$/, \"\").replace(/\\/[^\\/]+$/, \"/\");\n__webpack_require__.p = scriptUrl;","__webpack_require__.b = document.baseURI || self.location.href;\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t926: 0\n};\n\n// no chunk on demand loading\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n// no on chunks loaded\n\n// no jsonp function","/*\n * Copyright (c) Microsoft Corporation. All rights reserved. Licensed under the MIT license.\n * See LICENSE in the project root for license information.\n */\n\n/* global document, Office */\n\n// The Office initialize function must be run each time a new page is loaded.\nOffice.onReady((info) => {\n  if (info.host === Office.HostType.Outlook) {\n    document.getElementById(\"submit-to-llm\").onclick = submitEmailToLLM;\n    document.getElementById(\"reply-with-content\").onclick = replyWithLLMContent;\n    document.getElementById(\"discard-response\").onclick = discardLLMResponse;\n  }\n});\n\nlet llmResponseContent = \"\"; // Removed type annotation\n\n/**\n * Calls the Gradio LLM API endpoint.\n * @param {string} emailContent The content of the email to send to the LLM.\n * @returns {Promise<string>} A Promise that resolves with the LLM response.\n */\nasync function callLLMAPI(emailContent) {\n  const statusMessage = document.getElementById(\"status-message\");\n  statusMessage.innerText = \"Analyzing email with AI (calling Gradio)...\";\n\n  // IMPORTANT: This URL directly points to your Gradio app running on localhost:8082\n  const gradioApiUrl = \"http://localhost:8082/run/predict\";\n\n  try {\n    const response = await fetch(gradioApiUrl, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      // Gradio's predict endpoint typically expects inputs in an array named 'data'\n      body: JSON.stringify({\n        data: [emailContent] // Your Gradio function expects `email_content` as the first argument\n      })\n    });\n\n    if (!response.ok) {\n      const errorData = await response.json(); // Try to get more specific error from Gradio\n      throw new Error(`Gradio API error! Status: ${response.status}, Message: ${errorData.detail || response.statusText}`);\n    }\n\n    const data = await response.json();\n    console.log(\"Gradio API Response:\", data);\n\n    // Gradio's predict endpoint returns results in data[0] for the first output\n    if (data && data.data && data.data.length > 0) {\n      statusMessage.innerText = \"\"; // Clear status\n      return data.data[0]; // The LLM response\n    } else {\n      throw new Error(\"Gradio API response did not contain expected data.\");\n    }\n\n  } catch (error) {\n    console.error(\"Error calling Gradio LLM API:\", error);\n    statusMessage.innerText = `Error: Could not get AI response from Gradio. Check console.`;\n    return `Error: Failed to connect to Gradio AI: ${error.message}`;\n  }\n}\n\n/**\n * Retrieves the email content and sends it to the LLM API.\n */\nasync function submitEmailToLLM() {\n  const llmResponseArea = document.getElementById(\"llm-response-area\");\n  // Removed 'as HTMLTextAreaElement' type assertion\n  const llmResponseText = document.getElementById(\"llm-response-text\");\n  const statusMessage = document.getElementById(\"status-message\");\n\n  llmResponseArea.style.display = \"none\"; // Hide previous response\n  llmResponseText.value = \"\"; // Clear previous text\n  statusMessage.innerText = \"Fetching email content...\";\n  llmResponseContent = \"\"; // Clear stored response\n\n  if (Office.context.mailbox.item.itemType === Office.MailboxEnums.ItemType.Message) {\n    // Get the email body as plain text\n    Office.context.mailbox.item.body.getAsync(Office.CoercionType.Text, async function (asyncResult) {\n      if (asyncResult.status === Office.AsyncResultStatus.Succeeded) {\n        const emailBody = asyncResult.value; // Removed 'as string' type assertion\n        console.log(\"Email Body Retrieved:\", emailBody);\n\n        try {\n          llmResponseContent = await callLLMAPI(emailBody);\n          llmResponseText.value = llmResponseContent;\n          llmResponseArea.style.display = \"block\"; // Show the response area\n          statusMessage.innerText = \"AI analysis complete.\";\n        } catch (error) {\n          console.error(\"Failed to get LLM response:\", error);\n          llmResponseText.value = \"Error: Could not get AI response.\";\n          llmResponseArea.style.display = \"block\";\n          statusMessage.innerText = \"Error: Failed to get AI response.\";\n        }\n      } else {\n        console.error(\"Error getting email body:\", asyncResult.error);\n        statusMessage.innerText = `Error: Could not retrieve email body. ${asyncResult.error.message}`;\n      }\n    });\n  } else {\n    statusMessage.innerText = \"Please select an email to analyze.\";\n  }\n}\n\n/**\n * Creates a new reply draft with the LLM's generated content.\n */\nfunction replyWithLLMContent() {\n  const item = Office.context.mailbox.item;\n  const statusMessage = document.getElementById(\"status-message\");\n\n  if (!llmResponseContent) {\n    statusMessage.innerText = \"No AI content to reply with.\";\n    return;\n  }\n\n  // Attempt to get the sender's name for a personalized greeting\n  let senderName = \"Recipient\";\n  if (item.itemType === Office.MailboxEnums.ItemType.Message && item.sender && item.sender.displayName) {\n    senderName = item.sender.displayName.split(\" \")[0] || \"Recipient\"; // Just first name\n  }\n\n  // Prepend a greeting and sign-off\n  const fullReplyContent = `Dear ${senderName},\\n\\n${llmResponseContent}\\n\\nBest regards,\\n[Your Name]`;\n\n  // Display a reply form. Outlook handles setting recipients correctly for replies.\n  item.displayReplyForm(\n    {\n      htmlBody: fullReplyContent, // Use htmlBody for rich text, plain text if you prefer\n      subject: `Re: ${item.subject || \"No Subject\"}` // Include original subject\n    },\n    function (asyncResult) {\n      if (asyncResult.status === Office.AsyncResultStatus.Succeeded) {\n        statusMessage.innerText = \"Reply draft created successfully!\";\n        // You might want to hide the LLM response area after a successful reply\n        discardLLMResponse();\n      } else {\n        statusMessage.innerText = `Error creating reply draft: ${asyncResult.error.message}`;\n        console.error(\"Error creating reply draft:\", asyncResult.error);\n      }\n    }\n  );\n}\n\n/**\n * Hides the LLM response area and clears the content.\n */\nfunction discardLLMResponse() {\n  const llmResponseArea = document.getElementById(\"llm-response-area\");\n  // Removed 'as HTMLTextAreaElement' type assertion\n  const llmResponseText = document.getElementById(\"llm-response-text\");\n  const statusMessage = document.getElementById(\"status-message\");\n\n  llmResponseArea.style.display = \"none\";\n  llmResponseText.value = \"\";\n  llmResponseContent = \"\";\n  statusMessage.innerText = \"Response discarded.\";\n}","// Imports\nvar ___HTML_LOADER_IMPORT_0___ = new URL(\"./taskpane.css\", import.meta.url);\n// Module\nvar code = \"<!DOCTYPE html> <html> <head> <meta charset=\\\"UTF-8\\\"/> <meta http-equiv=\\\"X-UA-Compatible\\\" content=\\\"IE=Edge\\\"/> <meta name=\\\"viewport\\\" content=\\\"width=device-width,initial-scale=1\\\"> <title>LLM Email Assistant</title> <link rel=\\\"stylesheet\\\" href=\\\"\" + ___HTML_LOADER_IMPORT_0___ + \"\\\"/> <\" + \"script src=\\\"https://appsforoffice.microsoft.com/lib/1/hosted/office.js\\\"><\" + \"/script> </head> <body> <div id=\\\"app-body\\\"> <div class=\\\"header\\\"> <h1 class=\\\"ms-font-su\\\">LLM Email Assistant</h1> </div> <div class=\\\"content\\\"> <p>Get AI assistance for your emails.</p> <button id=\\\"submit-to-llm\\\" class=\\\"ms-Button ms-Button--primary\\\"> <span class=\\\"ms-Button-label\\\">Analyze Email with LLM</span> </button> <div id=\\\"llm-response-area\\\" style=\\\"display:none\\\"> <h3>AI Response:</h3> <textarea id=\\\"llm-response-text\\\" readonly=\\\"readonly\\\"></textarea> <button id=\\\"reply-with-content\\\" class=\\\"ms-Button ms-Button--primary\\\"> <span class=\\\"ms-Button-label\\\">Reply with this Content</span> </button> <button id=\\\"discard-response\\\" class=\\\"ms-Button\\\"> <span class=\\\"ms-Button-label\\\">Discard</span> </button> </div> <div id=\\\"status-message\\\" style=\\\"margin-top:10px\\\"></div> </div> </div> </body> </html>\";\n// Exports\nexport default code;"],"names":["__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","undefined","exports","module","__webpack_modules__","m","g","globalThis","this","Function","e","window","o","obj","prop","Object","prototype","hasOwnProperty","call","scriptUrl","importScripts","location","document","currentScript","tagName","toUpperCase","src","scripts","getElementsByTagName","length","i","test","Error","replace","p","b","baseURI","self","href","t","r","Symbol","n","iterator","toStringTag","c","Generator","u","create","_regeneratorDefine2","f","y","G","v","a","d","bind","l","TypeError","done","value","return","GeneratorFunction","GeneratorFunctionPrototype","getPrototypeOf","setPrototypeOf","__proto__","displayName","_regenerator","w","defineProperty","enumerable","configurable","writable","_invoke","asyncGeneratorStep","Promise","resolve","then","_asyncToGenerator","arguments","apply","_next","_throw","Office","onReady","info","host","HostType","Outlook","getElementById","onclick","submitEmailToLLM","replyWithLLMContent","discardLLMResponse","llmResponseContent","callLLMAPI","_x","_callLLMAPI","_callee","emailContent","statusMessage","response","errorData","data","_t","_context","innerText","fetch","method","headers","body","JSON","stringify","ok","json","concat","status","detail","statusText","console","log","error","message","_submitEmailToLLM","_callee3","llmResponseArea","llmResponseText","_context3","style","display","context","mailbox","item","itemType","MailboxEnums","ItemType","Message","getAsync","CoercionType","Text","_ref","_callee2","asyncResult","emailBody","_t2","_context2","AsyncResultStatus","Succeeded","_x2","senderName","sender","split","fullReplyContent","displayReplyForm","htmlBody","subject","URL"],"sourceRoot":""}