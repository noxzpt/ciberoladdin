{"version":3,"file":"taskpane.js","mappings":"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","sources":["webpack://office-addin-taskpane-js/webpack/bootstrap","webpack://office-addin-taskpane-js/webpack/runtime/global","webpack://office-addin-taskpane-js/webpack/runtime/hasOwnProperty shorthand","webpack://office-addin-taskpane-js/webpack/runtime/publicPath","webpack://office-addin-taskpane-js/webpack/runtime/jsonp chunk loading","webpack://office-addin-taskpane-js/./src/taskpane/taskpane.js","webpack://office-addin-taskpane-js/./src/taskpane/taskpane.html"],"sourcesContent":["// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = function(obj, prop) { return Object.prototype.hasOwnProperty.call(obj, prop); }","var scriptUrl;\nif (__webpack_require__.g.importScripts) scriptUrl = __webpack_require__.g.location + \"\";\nvar document = __webpack_require__.g.document;\nif (!scriptUrl && document) {\n\tif (document.currentScript && document.currentScript.tagName.toUpperCase() === 'SCRIPT')\n\t\tscriptUrl = document.currentScript.src;\n\tif (!scriptUrl) {\n\t\tvar scripts = document.getElementsByTagName(\"script\");\n\t\tif(scripts.length) {\n\t\t\tvar i = scripts.length - 1;\n\t\t\twhile (i > -1 && (!scriptUrl || !/^http(s?):/.test(scriptUrl))) scriptUrl = scripts[i--].src;\n\t\t}\n\t}\n}\n// When supporting browsers where an automatic publicPath is not supported you must specify an output.publicPath manually via configuration\n// or pass an empty string (\"\") and set the __webpack_public_path__ variable from your code to use your own logic.\nif (!scriptUrl) throw new Error(\"Automatic publicPath is not supported in this browser\");\nscriptUrl = scriptUrl.replace(/^blob:/, \"\").replace(/#.*$/, \"\").replace(/\\?.*$/, \"\").replace(/\\/[^\\/]+$/, \"/\");\n__webpack_require__.p = scriptUrl;","__webpack_require__.b = document.baseURI || self.location.href;\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t926: 0\n};\n\n// no chunk on demand loading\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n// no on chunks loaded\n\n// no jsonp function","document.addEventListener(\"DOMContentLoaded\", () => {\n    const submitButton = document.getElementById(\"submit-to-llm\");\n    const responseArea = document.getElementById(\"llm-response-area\");\n    const responseHtmlPreview = document.getElementById(\"llm-response-html-preview\");\n    const replyButton = document.getElementById(\"reply-with-content\");\n    const discardButton = document.getElementById(\"discard-response\");\n    const statusMessage = document.getElementById(\"status-message\");\n    const actionSelect = document.getElementById(\"action-select\");\n    const userQueryInput = document.getElementById(\"user-query-input\");\n  \n    // New elements for the collapsible section\n    const toggleOptionsButton = document.getElementById(\"toggle-options\");\n    const aiOptionsContent = document.getElementById(\"ai-options-content\");\n    const toggleArrow = document.getElementById(\"toggle-arrow\");\n  \n    let lastLlmResponse = \"\"; // Store the last LLM response for the reply button\n  \n    // --- Collapsible Section Logic ---\n    // Initial state: START EXPANDED\n    aiOptionsContent.classList.add(\"expanded\"); // Add 'expanded' class to start expanded\n    toggleArrow.classList.add(\"expanded\"); // Rotate arrow up initially\n\n    toggleOptionsButton.addEventListener(\"click\", () => {\n        aiOptionsContent.classList.toggle(\"expanded\");\n        toggleArrow.classList.toggle(\"expanded\");\n    });\n    // --- End Collapsible Section Logic ---\n  \n  \n    // Ensure Office.js is fully loaded before interacting with mailbox properties\n    Office.onReady(async (info) => {\n      if (info.host === Office.HostType.Outlook) {\n        console.log(\"Office.js is ready for Outlook host.\");\n        // You can put any initial setup here if needed\n      }\n    });\n  \n    submitButton.addEventListener(\"click\", async () => {\n        responseHtmlPreview.innerHTML = \"\"; // Clear the HTML preview\n        lastLlmResponse = \"\"; // Clear the stored response\n        aiOptionsContent.classList.remove(\"expanded\");\n        toggleArrow.classList.remove(\"expanded\");\n        try {\n            statusMessage.textContent = \"⏳ Extracting email body and user info...\";\n            \n            // Get the current user's email address\n            const currentUserEmail = Office.context.mailbox.userProfile.emailAddress;\n            console.log(\"Current user email:\", currentUserEmail);\n  \n            // Get the selected action from the dropdown\n            const selectedAction = actionSelect.value;\n            console.log(\"Selected action:\", selectedAction);\n  \n            // Get the custom query text\n            const customQueryText = userQueryInput.value.trim(); // .trim() removes leading/trailing whitespace\n            console.log(\"Custom query:\", customQueryText);\n  \n            // Determine the base query based on the selected action\n            let llmPrompt = \"\";\n            if (selectedAction === \"reply\") {\n                llmPrompt = \"Please generate a reply to this email. \";\n            } else if (selectedAction === \"summarize\") {\n                llmPrompt = \"Please summarize this email concisely. \";\n            }\n  \n            // Append custom query if provided\n            if (customQueryText) {\n                llmPrompt += `Additionally, consider this instruction: \"${customQueryText}\".`;\n            }\n  \n            await Office.context.mailbox.item.body.getAsync(\"html\", async result => { // Ensure \"html\" is requested\n                if (result.status === Office.AsyncResultStatus.Succeeded) {\n                    const emailBody = result.value;\n  \n                    const payload = {\n                        email_body: emailBody,\n                        query: llmPrompt, // Use the dynamically generated combined query\n                        email_addr: currentUserEmail,\n                        action: selectedAction // Include the new 'action' field\n                    };\n  \n                    statusMessage.textContent = \"📡 Sending request to LLM...\";\n  \n                    const res = await fetch(\"http://localhost:8082/api/ask\", {\n                        method: \"POST\",\n                        headers: {\n                            \"Content-Type\": \"application/json\"\n                        },\n                        body: JSON.stringify(payload)\n                    });\n  \n                    if (!res.ok) {\n                        const errorText = await res.text(); // Get more details from the error response\n                        throw new Error(`Server responded with status ${res.status}: ${errorText}`);\n                    }\n  \n                    const data = await res.json();\n                    const llmResponse = data.result?.answer || \"⚠️ No response received.\";\n                    \n                    // Store the response for the reply button\n                    lastLlmResponse = llmResponse; \n  \n                    // Assign the HTML directly to the preview div\n                    responseHtmlPreview.innerHTML = llmResponse; \n                    responseArea.classList.remove(\"hidden\"); // Remove the 'hidden' class\n                    responseArea.classList.add(\"visible\");   // Add the 'visible' class\n                    statusMessage.textContent = \"✅ Response received!\";\n  \n                    // Clear the custom query input after successful submission\n                    userQueryInput.value = \"\"; \n  \n                } else {\n                    throw new Error(\"Failed to extract email body: \" + result.error.message);\n                }\n            });\n        } catch (err) {\n            console.error(\"Error in taskpane:\", err);\n            statusMessage.textContent = \"❌ Error: \" + err.message;\n        }\n    });\n  \n    replyButton.addEventListener(\"click\", () => {\n        // Use the stored LLM response for the reply draft.\n        // If the LLM generates a summary, this will place the summary in the reply draft.\n        // You might consider adding a condition here to only call displayReplyForm if action was 'reply'.\n        Office.context.mailbox.item.displayReplyForm(lastLlmResponse);\n    });\n  \n    discardButton.addEventListener(\"click\", () => {\n        responseArea.classList.remove(\"visible\"); // Remove the 'visible' class\n        responseArea.classList.add(\"hidden\");    // Add the 'hidden' class back\n        responseHtmlPreview.innerHTML = \"\"; // Clear the HTML preview\n        lastLlmResponse = \"\"; // Clear the stored response\n        userQueryInput.value = \"\"; // Clear the custom query input on discard\n        statusMessage.textContent = \"🗑️ Response discarded.\";\n        aiOptionsContent.classList.toggle(\"expanded\"); // Add 'expanded' class to start expanded\n        toggleArrow.classList.toggle(\"expanded\"); // Rotate arrow up initially\n    });\n  });","// Imports\nvar ___HTML_LOADER_IMPORT_0___ = new URL(\"./taskpane.css\", import.meta.url);\n// Module\nvar code = \"<!DOCTYPE html> <html> <head> <meta charset=\\\"UTF-8\\\"/> <meta http-equiv=\\\"X-UA-Compatible\\\" content=\\\"IE=Edge\\\"/> <meta name=\\\"viewport\\\" content=\\\"width=device-width,initial-scale=1\\\"> <title>Ciberoladdin Email Assistant</title> <link rel=\\\"stylesheet\\\" href=\\\"\" + ___HTML_LOADER_IMPORT_0___ + \"\\\"/> <\" + \"script src=\\\"https://appsforoffice.microsoft.com/lib/1/hosted/office.js\\\"><\" + \"/script> </head> <body class=\\\"app-body-container\\\"> <div id=\\\"app-body\\\"> <div class=\\\"header\\\"> <h1 class=\\\"header-title\\\">Ciberoladdin</h1> </div> <div class=\\\"content-section\\\"> <div class=\\\"collapsible-container\\\"> <button class=\\\"collapsible-header\\\" id=\\\"toggle-options\\\"> <span class=\\\"header-text\\\">Options</span> <span class=\\\"arrow-icon\\\" id=\\\"toggle-arrow\\\">&#9660;</span> </button> <div class=\\\"collapsible-content\\\" id=\\\"ai-options-content\\\"> <div class=\\\"input-group\\\"> <label for=\\\"action-select\\\" class=\\\"input-label\\\">Choose Action:</label> <select id=\\\"action-select\\\" class=\\\"select-box\\\"> <option value=\\\"reply\\\">Generate Reply</option> <option value=\\\"summarize\\\">Summarize Email</option> <option value=\\\"cpreply\\\">CP Mode</option> </select> </div> <div class=\\\"input-group\\\"> <label for=\\\"user-query-input\\\" class=\\\"input-label\\\">Query (Optional):</label> <textarea id=\\\"user-query-input\\\" class=\\\"text-input\\\" placeholder=\\\"ex.'Make it formal' or 'Highlight key dates'\\\" rows=\\\"3\\\"></textarea> </div> <button id=\\\"submit-to-llm\\\" class=\\\"action-button primary-button full-width-button\\\"> <span>Submit</span> </button> </div> </div> <div id=\\\"llm-response-area\\\" class=\\\"response-area hidden\\\"> <h3 class=\\\"response-title\\\">Output:</h3> <div id=\\\"llm-response-html-preview\\\" class=\\\"llm-html-output scrollable-box\\\"></div> <div class=\\\"response-buttons-container\\\"> <button id=\\\"reply-with-content\\\" class=\\\"action-button primary-button\\\"> <span>&#x1F4E4; Reply with this Content</span> </button> <button id=\\\"discard-response\\\" class=\\\"action-button secondary-button\\\"> <span>&#x1F5D1; Discard</span> </button> </div> </div> <div id=\\\"status-message\\\" class=\\\"status-message\\\"></div> </div> </div> </body> </html>\";\n// Exports\nexport default code;"],"names":["__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","undefined","exports","module","__webpack_modules__","m","g","globalThis","this","Function","e","window","o","obj","prop","Object","prototype","hasOwnProperty","call","scriptUrl","importScripts","location","document","currentScript","tagName","toUpperCase","src","scripts","getElementsByTagName","length","i","test","Error","replace","p","b","baseURI","self","href","t","r","Symbol","n","iterator","toStringTag","c","Generator","u","create","_regeneratorDefine2","f","y","G","v","a","d","bind","l","TypeError","done","value","return","GeneratorFunction","GeneratorFunctionPrototype","getPrototypeOf","setPrototypeOf","__proto__","displayName","_regenerator","w","defineProperty","enumerable","configurable","writable","_invoke","asyncGeneratorStep","Promise","resolve","then","_asyncToGenerator","arguments","apply","_next","_throw","addEventListener","submitButton","getElementById","responseArea","responseHtmlPreview","replyButton","discardButton","statusMessage","actionSelect","userQueryInput","toggleOptionsButton","aiOptionsContent","toggleArrow","lastLlmResponse","classList","add","toggle","Office","onReady","_ref","_callee","info","_context","host","HostType","Outlook","console","log","_x","_callee3","currentUserEmail","selectedAction","customQueryText","llmPrompt","_t","_context3","innerHTML","remove","textContent","context","mailbox","userProfile","emailAddress","trim","concat","item","body","getAsync","_ref3","_callee2","result","_data$result","emailBody","payload","res","errorText","data","llmResponse","_context2","status","AsyncResultStatus","Succeeded","email_body","query","email_addr","action","fetch","method","headers","JSON","stringify","ok","text","json","answer","error","message","_x2","displayReplyForm","URL"],"sourceRoot":""}